<Window x:Class="DAN_XLV_Kristina_Garcia_Francisco.View.StorekeeperWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DAN_XLV_Kristina_Garcia_Francisco.View"
        mc:Ignorable="d"
        Title="Storekeeper" Height="600" Width="400">
    <Window.Resources>
        <Style x:Key="MyBorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="#5BCED0" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="CornerRadius" Value="3" />
        </Style>
    </Window.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
                    <Button Width="80" Height="20" Name="btnLogoff" Content="Log Off"
                    Command="{Binding Logoff, UpdateSourceTrigger=PropertyChanged}" Margin="20,4,4,4" FontWeight="Bold"/>
                </StackPanel>
                <Grid Grid.Column="1" Grid.Row="2">
                    <Border Style="{StaticResource MyBorderStyle}" Margin="0,4,0,4" Visibility="{Binding Visibility, ElementName=StoreLabel}" 
                        HorizontalAlignment="Stretch" Width="auto" CornerRadius="0" Background="{Binding StoreInfoColor}" BorderThickness="0">
                        <Label x:Name="StoreLabel" Content="{Binding StoreLabel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold"
                           Foreground="White" HorizontalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Border>
                </Grid>
                <Grid Grid.Column="1" Grid.Row="3" Height="auto" Width="auto" Visibility="{Binding UnstoredProductExists}">
                    <Border Style="{StaticResource MyBorderStyle}" Margin="20,20,20,0" Visibility="{Binding Visibility, ElementName=UnstoredProductExistsLabel}">
                        <Label x:Name="UnstoredProductExistsLabel" Content="Unstored Products" Background="White" FontWeight="Bold" HorizontalContentAlignment="Stretch">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Border>
                </Grid>
                <Grid Grid.Column="1" Grid.Row="4" Height="auto" Width="auto" Visibility="{Binding UnstoredProductExists}">
                    <DataGrid Name="DataGridUnstoredProduct" ItemsSource="{Binding UnstoredProduct, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding Product, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False"
                      HorizontalGridLinesBrush="Black" BorderBrush="Black" Foreground="Black" IsReadOnly="True"
                      FontWeight="Bold" Margin="20,0,20,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Code" Binding="{Binding ProductCode}" Width="0.25*"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding ProductName}" Width="0.25*"/>
                            <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}" Width="0.25*"/>
                            <DataGridTextColumn Header="Price" Binding="{Binding Price}" Width="0.25*"/>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Name="btnStoreProduct" Content="Store" 
                                Command="{Binding DataContext.StoreProduct, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                        Margin="4" FontWeight="Bold"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
                <Grid Grid.Column="1" Grid.Row="5" Height="auto" Width="auto" Visibility="{Binding StoredProductExists}">
                    <Border Style="{StaticResource MyBorderStyle}" Margin="20,20,20,0" Visibility="{Binding Visibility, ElementName=StoredProductExistsLabel}">
                        <Label x:Name="StoredProductExistsLabel" Content="Stored Products" Background="White" FontWeight="Bold" HorizontalContentAlignment="Stretch">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Border>
                </Grid>
                <Grid Grid.Column="1" Grid.Row="6" Height="auto" Width="auto" Visibility="{Binding StoredProductExists}">
                    <DataGrid Name="DataGridStoredProduct" ItemsSource="{Binding StoredProduct, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding Product, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False"
                      HorizontalGridLinesBrush="Black" BorderBrush="Black" Foreground="Black" IsReadOnly="True"
                      FontWeight="Bold" Margin="20,0,20,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Code" Binding="{Binding ProductCode}" Width="0.25*"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding ProductName}" Width="0.25*"/>
                            <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}" Width="0.25*"/>
                            <DataGridTextColumn Header="Price" Binding="{Binding Price}" Width="0.25*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Grid>
        </Grid>
    </ScrollViewer>
</Window>
